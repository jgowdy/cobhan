<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e1415213-01c4-47e7-b15f-90583807392b" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node-ffi-napi/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/node-ffi-napi/index.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node-ffi-napi/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/node-ffi-napi/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/node-ffi-napi/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/node-ffi-napi/package.json" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="GOROOT" url="file:///snap/go/current" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="ProjectId" id="1xENYMajBMbMdBynpt9gmR5t7hy" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.formatter.settings.were.checked" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="javascript.nodejs.core.library.configured.version" value="16.7.0" />
    <property name="javascript.nodejs.core.library.typings.version" value="16.7.0" />
    <property name="last_opened_file_path" value="$USER_HOME$" />
    <property name="settings.editor.selected.configurable" value="preferences.pluginManager" />
  </component>
  <component name="RunManager" selected="Node.js.index.js">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="cobhan" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="cobhan" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build linux amd64" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="cobhan" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-buildmode=c-shared -o output/linux/amd64/libplugtest.so" />
      <envs>
        <env name="CGO_ENABLED" value="1 GOOS=linux GOARCH=amd64" />
      </envs>
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <option name="run" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="go build linux arm64" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="cobhan" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-buildmode=c-shared -o output/linux/arm64/libplugtest.so" />
      <envs>
        <env name="CGO_ENABLED" value="1 GOOS=linux GOARCH=arm64" />
      </envs>
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <option name="run" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="go build macos amd64" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="cobhan" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-buildmode=c-shared -o output/macos/amd64/libplugtest.dylib" />
      <envs>
        <env name="CGO_ENABLED" value="1 GOOS=darwin GOARCH=amd64" />
      </envs>
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <option name="run" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="go build macos arm64" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="cobhan" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-buildmode=c-shared -o output/macos/arm64/libplugtest.dylib" />
      <envs>
        <env name="CGO_ENABLED" value="1 GOOS=darwin GOARCH=arm64" />
      </envs>
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <option name="run" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="go build windows amd64" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="cobhan" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-buildmode=c-shared -o output/windows/amd64/libplugtest.dll" />
      <envs>
        <env name="CGO_ENABLED" value="1 GOOS=windows GOARCH=amd64" />
      </envs>
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <option name="run" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="go build windows arm64" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="cobhan" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-buildmode=c-shared -o output/windows/arm64/libplugtest.dll" />
      <envs>
        <env name="CGO_ENABLED" value="1 GOOS=windows GOARCH=arm64" />
      </envs>
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <option name="run" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="cobhan" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="cobhan" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="index.js" type="NodeJSConfigurationType" nameIsGenerated="true" path-to-js-file="index.js" working-dir="$PROJECT_DIR$/node-ffi-napi">
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.go build macos amd64" />
      <item itemvalue="Go Build.go build macos arm64" />
      <item itemvalue="Go Build.go build linux amd64" />
      <item itemvalue="Go Build.go build linux arm64" />
      <item itemvalue="Go Build.go build windows amd64" />
      <item itemvalue="Go Build.go build windows arm64" />
      <item itemvalue="Node.js.index.js" />
    </list>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
</project>