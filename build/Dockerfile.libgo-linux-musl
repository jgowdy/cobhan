FROM cobhan-clone AS cobhan-clone

FROM docker.io/alpine AS libgo-linux-musl

# Install build dependencies
RUN apk add git vim make automake autoconf gmp gmp-dev mpfr mpfr-dev mpc mpc1-dev flex abuild bison texinfo gawk zip zlib-dev libucontext-dev gcc-gnat-bootstrap linux-headers isl-dev build-base

# Add a build user so we don't build as root
RUN adduser -D build

# Switch to the build user
USER build

# Create signing keys for the apks
RUN abuild-keygen -a -n

# Move to build user's home directory
WORKDIR /home/build

# Shallow clone the aports repo to get the abuild files
RUN git clone --depth 1 --branch v3.14.1 --single-branch https://github.com/alpinelinux/aports.git

# Copy the repo from the cobhan-clone container
COPY --from=cobhan-clone /cobhan /cobhan

# Move to the gcc aports directory to build gcc apks
WORKDIR /home/build/aports/main/gcc

# Copy the patched abuild files from the cobhan repo to /home/build/aports/main/gcc
RUN cp /cobhan/alpine-abuild-gcc/* .

# Build the apk files using abuild
RUN LANG_CXX=0 LANG_D=0 LANG_OBJC=0 LANG_FORTRAN=0 LANG_ADA=0 abuild -K -s /home/build/src

# libgo.so.16 is in /home/build/aports/main/gcc/pkg/libgo/usr/lib/libgo.so.16.0.0

# Output apk files are in /home/build/packages
